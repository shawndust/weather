{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createVNode as _createVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"app\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"Weather Forecast\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.forecast, f => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: f.id\n    }, _toDisplayString(f), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _createElementVNode(\"main\", null, [_createVNode($setup[\"Forecast\"])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAMEA,oBAEM,KAFN,EAEM;EAFDC,EAAE,EAAC;AAEF,CAFN,EAAa,cACXD,oBAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CADW,CAAb;;AAAA;;;6DAAAE,YAGAF,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHHG,oBAEKC,SAFL,EAEK,IAFL,EAEKC,YAFWC,cAEX,EAFMC,CAAa,IAAZ;yBAAZJ,oBAEK,IAFL,EAEK;MAFsBK,GAAG,EAAED,CAAC,CAACN;IAE7B,CAFL,mBACKM,EADL,EACM;IAAA;IADN;GAEK,CAFL;;EAAA,CAGG,EAJL,GAKAP,oBAEO,MAFP,EAEO,IAFP,EAEO,CADLS,aAAYC,kBAAZ,CACK,CAFP","names":["_createElementVNode","id","_hoisted_1","_createElementBlock","_Fragment","_renderList","$data","f","key","_createVNode","$setup"],"sourceRoot":"","sources":["/Users/shawndust/Documents/practice-go/shopping-list/src/App.vue"],"sourcesContent":["<script setup>\n  import Forecast from './Forecast.vue'\n\n</script>\n\n<template>\n  <div id=\"app\">\n    <h1>Weather Forecast</h1>\n  </div>\n  <ul>\n    <li v-for=\"f of forecast\" :key=\"f.id\">\n      {{ f }}\n    </li>\n  </ul>\n  <main>\n    <Forecast />\n  </main>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      forecast: \"\",\n    };\n  },\n  async created() {\n    try {\n      const res = await axios.get(`http://0.0.0.0:8080/forecast?freetext=nashville tn`);\n      this.forecast = res.data;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n};\n</script>\n<style>\n#app {\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\nli {\n  list-style: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}